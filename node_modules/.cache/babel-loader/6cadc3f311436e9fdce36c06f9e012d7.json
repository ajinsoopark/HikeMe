{"ast":null,"code":"var _jsxFileName = \"/Users/alexpark/pursuit/hackathon/HikeMe/frontend/src/components/TrailPage/info.js\";\nimport React from 'react';\nimport '../../css/info.css';\n\nvar Info = function Info(props) {\n  var name = props.name,\n      summary = props.summary,\n      trailLength = props.trailLength,\n      location = props.location,\n      elevation = props.elevation,\n      conditionDate = props.conditionDate,\n      conditionStatus = props.conditionStatus,\n      conditionDetails = props.conditionDetails,\n      ascent = props.ascent;\n  return React.createElement(React.Fragment, null, !props ? React.createElement(\"h1\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Trail Not Found\") : React.createElement(\"div\", {\n    className: \"info-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"trail-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, name)), React.createElement(\"div\", {\n    className: \"info-location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, location)), React.createElement(\"div\", {\n    className: \"trail-summary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, summary)), React.createElement(\"div\", {\n    className: \"trail-numbers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"trail-length\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Trail Length: \", trailLength, \" miles\"), React.createElement(\"p\", {\n    className: \"trail-ascend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Ascend: \", ascent, \" feet\"), React.createElement(\"p\", {\n    className: \"trail-elevation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Elevation: \", elevation, \" feet\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" Current Trail Conditions\"), conditionStatus === \"Unknown\" ? React.createElement(\"p\", {\n    className: \"condition-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Condition Status: Not unavailable\") : React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    className: \"condition-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, conditionStatus), React.createElement(\"p\", {\n    className: \"condition-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, conditionDetails), React.createElement(\"p\", {\n    className: \"condition-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, conditionDate)))));\n};\n\nexport default Info;","map":{"version":3,"sources":["/Users/alexpark/pursuit/hackathon/HikeMe/frontend/src/components/TrailPage/info.js"],"names":["React","Info","props","name","summary","trailLength","location","elevation","conditionDate","conditionStatus","conditionDetails","ascent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,oBAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,MACbC,IADa,GACgGD,KADhG,CACbC,IADa;AAAA,MACPC,OADO,GACgGF,KADhG,CACPE,OADO;AAAA,MACEC,WADF,GACgGH,KADhG,CACEG,WADF;AAAA,MACeC,QADf,GACgGJ,KADhG,CACeI,QADf;AAAA,MACyBC,SADzB,GACgGL,KADhG,CACyBK,SADzB;AAAA,MACoCC,aADpC,GACgGN,KADhG,CACoCM,aADpC;AAAA,MACmDC,eADnD,GACgGP,KADhG,CACmDO,eADnD;AAAA,MACoEC,gBADpE,GACgGR,KADhG,CACoEQ,gBADpE;AAAA,MACsFC,MADtF,GACgGT,KADhG,CACsFS,MADtF;AAEtB,SACE,0CAEC,CAACT,KAAD,GAAS;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAT,GACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAL,CADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,QAAL,CADF,CAJF,EAOE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,OAAL,CADH,CAPF,EAUI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA2CC,WAA3C,WADF,EAEE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCM,MAArC,UAFF,EAGE;AAAG,IAAA,SAAS,EAAE,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4CJ,SAA5C,UAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJF,EAKGE,eAAe,KAAK,SAApB,GACC;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADD,GAGD,0CACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,eAAjC,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCC,gBAAlC,CAFF,EAGE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BF,aAA/B,CAHF,CARF,CAVJ,CAHF,CADF;AAkCD,CApCD;;AAwCA,eAAeP,IAAf","sourcesContent":["import React from 'react'\n\nimport '../../css/info.css'\n\nconst Info = (props) => {\n    const {name, summary, trailLength, location, elevation, conditionDate, conditionStatus, conditionDetails, ascent} = props\n  return (\n    <>\n      {\n     !props ? <h1 className='error'>Trail Not Found</h1> :\n      <div className=\"info-container\">\n        <div className=\"trail-name\">\n          <h1>{name}</h1>\n        </div>\n        <div className='info-location'>\n          <h2>{location}</h2>\n        </div>\n        <div className=\"trail-summary\">\n           <h2>{summary}</h2>\n        </div>\n          <div className=\"trail-numbers\">\n            <p className='trail-length'>Trail Length: {trailLength} miles</p>\n            <p className='trail-ascend'>Ascend: {ascent} feet</p>\n            <p className ='trail-elevation'>Elevation: {elevation} feet</p>\n            <h2> Current Trail Conditions</h2>\n            {conditionStatus === \"Unknown\" ?\n              <p className='condition-status'>Condition Status: Not unavailable</p>\n              :\n            <>\n              <p className='condition-status'>{conditionStatus}</p>\n              <p className='condition-details'>{conditionDetails}</p>\n              <p className='condition-date'>{conditionDate}</p>\n            </>\n            }\n          </div>\n\n      </div>\n    }\n    </>\n  )\n}\n\n\n\nexport default Info\n"]},"metadata":{},"sourceType":"module"}