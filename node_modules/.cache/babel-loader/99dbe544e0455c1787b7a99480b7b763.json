{"ast":null,"code":"var _jsxFileName = \"/Users/alexpark/pursuit/hackathon/HikeMe/frontend/src/components/Home/sidebar.js\";\nimport React from 'react';\nimport TrailTile from './trailTile.js';\nimport { Link } from 'react-router-dom';\n\nvar SideBar = function SideBar(_ref) {\n  var props = _ref.props,\n      trails = _ref.trails,\n      currentLon = _ref.currentLon,\n      currentLat = _ref.currentLat;\n  //dummy data\n  console.log(props);\n  var mapTiles = trails.map(function (trail, i) {\n    return React.createElement(Link, {\n      key: i,\n      to: \"/trail/\".concat(trail.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(TrailTile, {\n      currentLon: currentLon,\n      currentLat: currentLat,\n      difficulty: trail.difficulty,\n      length: trail.length,\n      imgSqSmall: trail.imgSqSmall,\n      id: trail.id,\n      distance: trail.distance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(\"div\", {\n    className: \"sidebar-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, mapTiles);\n};\n\nexport default SideBar; // distance={normalizeDistance[i]}\n// let normalizeDistance = response.rows[0].elements.map(el => {return el = el.distance.text})","map":{"version":3,"sources":["/Users/alexpark/pursuit/hackathon/HikeMe/frontend/src/components/Home/sidebar.js"],"names":["React","TrailTile","Link","SideBar","props","trails","currentLon","currentLat","console","log","mapTiles","map","trail","i","id","difficulty","length","imgSqSmall","distance"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA6C;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,MAAoC,QAApCA,MAAoC;AAAA,MAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAC3D;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,MAAIM,QAAQ,GAAGL,MAAM,CAACM,GAAP,CAAW,UAACC,KAAD,EAAOC,CAAP,EAAa;AACrC,WAAO,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAc,MAAA,EAAE,mBAAYD,KAAK,CAACE,EAAlB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,SAAD;AAEE,MAAA,UAAU,EAAER,UAFd;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,UAAU,EAAEK,KAAK,CAACG,UAJpB;AAKE,MAAA,MAAM,EAAEH,KAAK,CAACI,MALhB;AAME,MAAA,UAAU,EAAEJ,KAAK,CAACK,UANpB;AAOE,MAAA,EAAE,EAAEL,KAAK,CAACE,EAPZ;AAQE,MAAA,QAAQ,EAAEF,KAAK,CAACM,QARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAAP;AAYD,GAbc,CAAf;AAcA,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QADH,CADF;AAKD,CAtBD;;AAwBA,eAAeP,OAAf,C,CACI;AACA","sourcesContent":["import React from 'react';\nimport TrailTile from './trailTile.js';\nimport { Link } from 'react-router-dom';\n\nconst SideBar = ({props, trails, currentLon, currentLat}) => {\n  //dummy data\n  console.log(props)\n  let mapTiles = trails.map((trail,i) => {\n    return <Link key={i} to={`/trail/${trail.id}`}>\n              <TrailTile\n              \n                currentLon={currentLon}\n                currentLat={currentLat}\n                difficulty={trail.difficulty}\n                length={trail.length}\n                imgSqSmall={trail.imgSqSmall}\n                id={trail.id}\n                distance={trail.distance}\n              />\n            </Link>\n  });\n  return (\n    <div className=\"sidebar-container\">\n      {mapTiles}\n    </div>\n  )\n}\n\nexport default SideBar;\n    // distance={normalizeDistance[i]}\n    // let normalizeDistance = response.rows[0].elements.map(el => {return el = el.distance.text})\n"]},"metadata":{},"sourceType":"module"}