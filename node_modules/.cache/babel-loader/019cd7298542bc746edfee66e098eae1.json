{"ast":null,"code":"import _classCallCheck from \"/Users/alexpark/pursuit/hackathon/HikeMe/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexpark/pursuit/hackathon/HikeMe/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexpark/pursuit/hackathon/HikeMe/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexpark/pursuit/hackathon/HikeMe/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexpark/pursuit/hackathon/HikeMe/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexpark/pursuit/hackathon/HikeMe/frontend/src/components/TrailPage/trailMain.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import Info from './info'\n// import TrailImg from './trailImg'\n// import StarRating from './starRating'\n\nimport Difficulty from './difficulty';\nimport FocusMap from './focusMap';\nimport '../../stylesheets/trailMain.css';\n\nvar TrailMain =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TrailMain, _Component);\n\n  function TrailMain() {\n    var _this;\n\n    _classCallCheck(this, TrailMain);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TrailMain).call(this));\n    _this.state = {\n      name: '',\n      summary: '',\n      difficulty: '',\n      starRating: '',\n      ratingCount: '',\n      trailLength: '',\n      location: '',\n      imageUrl: '',\n      conditionDetails: '',\n      conditionStatus: '',\n      conditionDate: '',\n      trailUrl: '',\n      ascent: '',\n      elevation: '',\n      latitude: '',\n      longitude: ''\n    };\n    return _this;\n  }\n\n  _createClass(TrailMain, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchTrailInfo();\n    }\n  }, {\n    key: \"fetchTrailInfo\",\n    value: function fetchTrailInfo() {\n      var _this2 = this;\n\n      if (this.props) {\n        var trailId = this.props.match.params.id; // trailId = 7000108\n\n        axios.get(\"https://www.hikingproject.com/data/get-trails-by-id?ids=\".concat(trailId, \"&key=200430061-384fefbb8ceed621af7cea7e5ab597b2\")).then(function (res) {\n          console.log(res.data.trails);\n          var trail = res.data.trails[0];\n\n          _this2.setState({\n            name: trail.name,\n            summary: trail.summary,\n            difficulty: trail.difficulty,\n            starRating: trail.stars,\n            ratingCount: trail.starVotes,\n            trailLength: trail.length,\n            location: trail.location,\n            imageUrl: trail.imgMedium,\n            conditionDetails: trail.conditionDetails,\n            conditionStatus: trail.conditionStatus,\n            conditionDate: trail.conditionDate,\n            trailUrl: trail.url,\n            ascent: trail.ascent,\n            elevation: trail.high,\n            latitude: trail.latitude,\n            longitude: trail.longitude\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          summary = _this$state.summary,\n          difficulty = _this$state.difficulty,\n          starRating = _this$state.starRating,\n          ratingCount = _this$state.ratingCount,\n          trailLength = _this$state.trailLength,\n          location = _this$state.location,\n          imageUrl = _this$state.imageUrl,\n          conditionDetails = _this$state.conditionDetails,\n          conditionStatus = _this$state.conditionStatus,\n          conditionDate = _this$state.conditionDate,\n          trailUrl = _this$state.trailUrl,\n          ascent = _this$state.ascent,\n          elevation = _this$state.elevation,\n          latitude = _this$state.latitude,\n          longitude = _this$state.longitude;\n      return React.createElement(\"div\", {\n        className: \"trailMainContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(TrailImg, {\n        imageUrl: imageUrl,\n        trailUrl: trailUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Info, {\n        name: name,\n        summary: summary,\n        trailLength: trailLength,\n        location: location,\n        conditionDate: conditionDate,\n        conditionStatus: conditionStatus,\n        conditionDetails: conditionDetails,\n        ascent: ascent,\n        elevation: elevation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(StarRating, {\n        starRating: starRating,\n        ratingCount: ratingCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Difficulty, {\n        difficulty: difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(StarRating, {\n        starRating: starRating,\n        ratingCount: ratingCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(FocusMap, {\n        longitude: longitude,\n        latitude: latitude,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TrailMain;\n}(Component);\n\nexport default TrailMain;","map":{"version":3,"sources":["/Users/alexpark/pursuit/hackathon/HikeMe/frontend/src/components/TrailPage/trailMain.js"],"names":["React","Component","axios","Difficulty","FocusMap","TrailMain","state","name","summary","difficulty","starRating","ratingCount","trailLength","location","imageUrl","conditionDetails","conditionStatus","conditionDate","trailUrl","ascent","elevation","latitude","longitude","fetchTrailInfo","props","trailId","match","params","id","get","then","res","console","log","data","trails","trail","setState","stars","starVotes","length","imgMedium","url","high","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\n\n// import Info from './info'\n// import TrailImg from './trailImg'\n// import StarRating from './starRating'\nimport Difficulty from './difficulty'\nimport FocusMap from './focusMap'\n\nimport '../../stylesheets/trailMain.css'\n\nclass TrailMain extends Component {\n    constructor () {\n        super ()\n        this.state = {\n            name: '',\n            summary: '',\n            difficulty: '',\n            starRating: '',\n            ratingCount: '',\n            trailLength: '',\n            location: '',\n            imageUrl: '',\n            conditionDetails: '',\n            conditionStatus: '',\n            conditionDate: '',\n            trailUrl: '',\n            ascent: '',\n            elevation: '',\n            latitude: '',\n            longitude: ''\n        }\n    }\n\n    componentDidMount () {\n        this.fetchTrailInfo()\n    }\n\n    fetchTrailInfo () {\n        if (this.props) {\n            let trailId = this.props.match.params.id\n            // trailId = 7000108\n            axios.get(`https://www.hikingproject.com/data/get-trails-by-id?ids=${trailId}&key=200430061-384fefbb8ceed621af7cea7e5ab597b2`)\n            .then(res => {\n                console.log(res.data.trails)\n                let trail = res.data.trails[0]\n                this.setState({\n                    name: trail.name,\n                    summary: trail.summary,\n                    difficulty: trail.difficulty,\n                    starRating: trail.stars,\n                    ratingCount: trail.starVotes,\n                    trailLength: trail.length,\n                    location: trail.location,\n                    imageUrl: trail.imgMedium,\n                    conditionDetails: trail.conditionDetails,\n                    conditionStatus: trail.conditionStatus,\n                    conditionDate: trail.conditionDate,\n                    trailUrl: trail.url,\n                    ascent: trail.ascent,\n                    elevation: trail.high,\n                    latitude: trail.latitude,\n                    longitude: trail.longitude\n                })\n            }).catch(err => console.log(err))\n        }\n    }\n\n    render () {\n\n        const { name, \n                summary, \n                difficulty, \n                starRating, \n                ratingCount, \n                trailLength, \n                location, \n                imageUrl, \n                conditionDetails, \n                conditionStatus, \n                conditionDate, \n                trailUrl, \n                ascent, \n                elevation,\n                latitude,\n                longitude } = this.state\n\n            return (\n            <div className='trailMainContainer'>\n               <TrailImg\n                 imageUrl={imageUrl}\n                 trailUrl={trailUrl}/>\n               <Info\n                 name={name}\n                 summary={summary}\n                 trailLength={trailLength}\n                 location={location}\n                 conditionDate={conditionDate}\n                 conditionStatus={conditionStatus}\n                 conditionDetails={conditionDetails}\n                 ascent={ascent}\n                 elevation={elevation}/>\n               <StarRating\n                 starRating={starRating}\n                 ratingCount={ratingCount}/>\n                <Difficulty\n                 difficulty={difficulty}/> \n                <StarRating\n                 starRating={starRating}\n                 ratingCount={ratingCount}/>\n                <FocusMap\n                 longitude={longitude}\n                 latitude={latitude}/>\n            </div>\n        )\n    }\n}\n\nexport default TrailMain\n"]},"metadata":{},"sourceType":"module"}